//JabberClient.java

import java.net.*;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;


public class JabberClient extends JFrame implements ActionListener {
    
    private JTextField jtfMessageToSend = new JTextField();
    private JTextArea jtaMessageReceived = new JTextArea();
   
        
    private JButton btnSend = new JButton("Send");
    private JButton btnDisc = new JButton("Disconnect");
    private JButton btnConn = new JButton("Connect");

    /** Creates a new instance of SimpleClient */
    public JabberClient() {
        
    	JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.add(new JLabel("Message to send: "), BorderLayout.WEST);
        btnSend.addActionListener(this);
        btnSend.setMnemonic('s');
        p.add(btnSend, BorderLayout.EAST);      
     		
        p.add(jtfMessageToSend, BorderLayout.CENTER);
        jtfMessageToSend.setHorizontalAlignment(JTextField.LEFT);
        jtaMessageReceived.setEditable(false);
        
        JPanel p2 = new JPanel();
        p2.setLayout(new BorderLayout());
        
        btnConn.addActionListener(this);
        btnConn.setMnemonic('c');
        p2.add(btnConn, BorderLayout.WEST);
                
        btnDisc.addActionListener(this);
        btnDisc.setMnemonic('d');
        p2.add(btnDisc, BorderLayout.EAST);
                
        getContentPane().setLayout(new BorderLayout());
        getContentPane().add(p, BorderLayout.SOUTH);
        getContentPane().add(new JScrollPane(jtaMessageReceived), BorderLayout.CENTER);
        getContentPane().add(p2, BorderLayout.NORTH);
        
        jtfMessageToSend.addActionListener(this);
        
        setTitle("Chat Client");
        setSize(500, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);        
        
        jtaMessageReceived.append("Use the command \"--nick\" to set your nickname\n");
        jtaMessageReceived.append("Type \"--help\" later for commands\n\n");
        jtaMessageReceived.setCaretPosition(jtaMessageReceived.getDocument().getLength());                 
    }

    // to be programmed by students
    private void actionSend(ActionEvent e) {
    	
    	String messageToSend = jtfMessageToSend.getText();
    	
    	if (messageToSend.startsWith("--nick")) {
    		String mynick = messageToSend.substring(7);
    		jtaMessageReceived.append("Your nickname is now \"" + mynick + "\"\n");
    		jtaMessageReceived.setCaretPosition(jtaMessageReceived.getDocument().getLength()); 
    	}

	// send message to server 

    }

    // to be programmed by students    
    private void actionDisconnect(ActionEvent e) {

	// disconnect from server    	

    }
    
    // to be programmed by students
    private void actionConnect(ActionEvent e) {
	
	// set up connection to server

    }
    
    public void actionPerformed(ActionEvent e) {    	    	
        if (e.getSource() instanceof JTextField || e.getSource() == btnSend) {
        	actionSend(e);
        }        
        else if (e.getSource() == btnDisc) {
        	actionDisconnect(e);
        }         
        else if (e.getSource() == btnConn) {
        	actionConnect(e);
        }
    }
    
    public static void main(String[] args) throws IOException {
        new JabberClient();        
    }

    
    // to be programmed by students
    class Listen extends Thread {	

	// constructor

	public void run() {

	    // handle incoming messages 

	}
    }
    
}